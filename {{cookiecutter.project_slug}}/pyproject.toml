[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "0.0.1"
description = "{{ cookiecutter.project_short_description }}"
authors = [
    "{{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>",
]
license = "MIT"
readme = "README.md"

documentation = "https://{{ cookiecutter.github_username }}.github.io/{{ cookiecutter.project_slug }}"
homepage = "https://{{ cookiecutter.github_username }}.github.io/{{ cookiecutter.project_slug }}"
repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  {%- for version in cookiecutter._python_version_specs[cookiecutter.python_version]['versions'] %}
  "Programming Language :: Python :: {{ version }}",
  {%- endfor %}
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]

packages = [
    { include = "{{ cookiecutter.package_name }}", from = "src" }
]

[tool.poetry.urls]
Changelog = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}/releases"

[tool.poetry.dependencies]
python = ">={{ cookiecutter._python_version_specs[cookiecutter.python_version]['versions'][0] }}, <4.0"

[tool.poetry.group.dev.dependencies]
nox = "*"
nox-poetry = "*"
black = "*"
ruff = "*"
mypy = "*"
pytest = "*"
pytest-cov = "*"
pytest-github-actions-annotate-failures = "*"
tryceratops = "*"

[tool.poetry.group.typeshed.dependencies]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = {{ cookiecutter._python_version_specs[cookiecutter.python_version]['black_taget_versions'] }}
include = '\.pyi?$'

[tool.coverage.report]
show_missing = true
fail_under = 50
exclude_lines = [
    "@overload",
    "if TYPE_CHECKING:",
    "pragma: no cover"
]

[tool.mypy]
disallow_any_unimported = true
disallow_untyped_defs = true
disallow_untyped_calls = true
no_implicit_optional = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
check_untyped_defs = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "noxfile"
disallow_untyped_defs = false

[tool.ruff]
line-length = 88
select = [
    "C",
    "D",
    "E",
    "F",
    "I",
    "S",
    "W",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
]
ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D107"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
"__init__.py" = ["F401"]
